<metro:MetroWindow x:Class="PsychonautsTools.MainWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:local="clr-namespace:PsychonautsTools"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                   xmlns:hex="clr-namespace:HexView.Wpf;assembly=HexView.Wpf"
                   mc:Ignorable="d"
                   Loaded="MainWindow_OnLoaded"
                   Closing="MainWindow_OnClosing"
                   Closed="MainWindow_OnClosed"
                   TitleCharacterCasing="Normal"
                   Title="Psychonauts Tools" 
                   MinWidth="400" MinHeight="300"
                   Width="1080" Height="800"
                   Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                   Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" 
                   d:DataContext="{d:DesignInstance local:MainWindowViewModel}">

    <metro:MetroWindow.Resources>
        <DataTemplate x:Key="DataTemplate.DataNodeTitle" DataType="{x:Type local:DataNodeViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Image Grid.Column="0"
                       Visibility="{Binding Path=Node.IconImageSource, Mode=OneTime, Converter={local:InvertedObjectNullToVisibilityConverter}}"
                       Width="16" Height="16"
                       Source="{Binding Path=Node.IconImageSource, Mode=OneTime}"
                       Margin="0 0 7 0" />

                <iconPacks:PackIconMaterial Grid.Column="0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Visibility="{Binding Path=Node.IconImageSource, Mode=OneTime, Converter={local:ObjectNullToVisibilityConverter}}"
                                            Kind="{Binding Path=Node, Mode=OneTime, Converter={local:DataNodeToIconKindConverter}}"
                                            Background="Transparent"
                                            Foreground="{Binding Path=Node, Mode=OneTime, Converter={local:DataNodeToIconBrushConverter}}"
                                            ToolTip="{Binding Path=Node.TypeDisplayName, Mode=OneTime}"
                                            Margin="0 0 7 0" />

                <TextBlock Grid.Column="1"
                           VerticalAlignment="Center"
                           Text="{Binding Path=Node.DisplayName, Mode=OneTime}"
                           Margin="0 0 7 0" />
            </Grid>
        </DataTemplate>
    </metro:MetroWindow.Resources>

    <metro:MetroWindow.InputBindings>
        <KeyBinding Modifiers="Control" Key="O" Command="{Binding Path=OpenFileCommand, Mode=OneTime}" />
    </metro:MetroWindow.InputBindings>

    <Grid IsEnabled="{Binding Path=IsLoading, Converter={local:InvertedBooleanConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Menu -->

        <Menu Grid.Row="0"
              Margin="0 0 0 4">
            <MenuItem Header="File">
                <MenuItem Header="Open" 
                          Icon="{iconPacks:Material FileOutline}"
                          Command="{Binding Path=OpenFileCommand, Mode=OneTime}"
                          InputGestureText="Ctrl+O"/>
                <Separator />
                <MenuItem Header="Exit" 
                          Icon="{iconPacks:Material Close}"
                          InputGestureText="Alt+F4"
                          Click="ExitMenuItem_OnClick"/>
            </MenuItem>
            <MenuItem Header="Tools">
                <!-- TODO: Settings dialog -->
                <MenuItem Header="Settings"
                          IsEnabled="False"
                          Icon="{iconPacks:Material CogOutline}"/>
            </MenuItem>
            <MenuItem Header="Help">
                <!-- TODO: About dialog -->
                <MenuItem Header="About"
                          IsEnabled="False"
                          Icon="{iconPacks:Material InformationOutline}"/>
            </MenuItem>
        </Menu>

        <!-- Content -->

        <Grid Grid.Row="1" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="250" />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Explorer -->

            <Grid Grid.Column="0">
                <TreeView ItemsSource="{Binding Path=Nodes, Mode=OneTime}"
                          AllowDrop="True"
                          Drop="DataNodes_OnDrop"
                          MouseLeftButtonDown="DataNodes_OnMouseLeftButtonDown"
                          SelectedItemChanged="DataNodes_OnSelectedItemChanged">

                    <TreeView.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding Path=UnloadSelectedNodeCommand, Mode=OneTime}" />
                    </TreeView.InputBindings>

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="IsSelected" Value="{Binding Path=IsSelected}" />
                            <EventSetter Event="Expanded" Handler="DataNode_OnExpanded" />
                            <!-- TODO: Add context menu -->
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Children, Mode=OneTime}">
                            <ContentPresenter ContentTemplate="{StaticResource DataTemplate.DataNodeTitle}" />
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>

                </TreeView>

                <Grid Visibility="{Binding Path=IsLoading, Converter={local:InvertedBooleanToVisibilityConverter}}">
                    <TextBlock FontSize="14"
                               Margin="7"
                               Visibility="{Binding Path=IsEmpty, Converter={local:BooleanToVisibilityConverter}}"
                               TextAlignment="Center"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center">
                        Open a file by going to <LineBreak/>
                        File > Open or dropping the file here
                    </TextBlock>
                </Grid>

                <metro:ProgressRing Visibility="{Binding Path=IsLoading, Converter={local:BooleanToVisibilityConverter}}" />

            </Grid>

            <GridSplitter Grid.Column="1" Width="4" Background="Transparent" />

            <!-- Selected File -->

            <Grid Grid.Column="2" 
                  Margin="4"
                  DataContext="{Binding Path=SelectedNode}"
                  IsEnabled="{Binding Converter={local:IsNotNullConverter}}"
                  Visibility="{Binding Converter={local:InvertedObjectNullToVisibilityConverter}}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0" x:Name="FileGridFooterRow" />
                </Grid.RowDefinitions>

                <!-- Header -->

                <StackPanel>

                    <ContentPresenter Content="{Binding}" 
                                      ContentTemplate="{StaticResource DataTemplate.DataNodeTitle}"
                                      HorizontalAlignment="Center" 
                                      TextBlock.FontSize="16"
                                      TextBlock.FontWeight="Bold"
                                      Margin="0 0 0 7"/>

                    <ToolBar ToolBarTray.IsLocked="True" ItemsSource="{Binding Path=UIItems, Mode=OneTime}">
                        <ToolBar.ItemTemplateSelector>
                            <local:ToolBarItemTemplateSelector />
                        </ToolBar.ItemTemplateSelector>
                    </ToolBar>

                    <Separator Margin="0 0 0 7" />

                    <ItemsControl ItemsSource="{Binding Path=InfoItems, Mode=OneTime}"
                                  Grid.IsSharedSizeScope="True"
                                  ItemTemplate="{StaticResource DataTemplate.InfoItem}"
                                  Margin="0 0 0 7" />

                    <Separator Margin="0 0 0 7" 
                               Visibility="{Binding Path=HasInfoItems, Mode=OneTime, Converter={local:BooleanToVisibilityConverter}}" />

                </StackPanel>

                <!-- Editor -->

                <ContentPresenter Grid.Row="1" Content="{Binding Path=EditorViewModel, Mode=OneTime}">
                    <ContentPresenter.ContentTemplateSelector>
                        <local:EditorTemplateSelector />
                    </ContentPresenter.ContentTemplateSelector>
                </ContentPresenter>

                <Separator Grid.Row="2" 
                           Visibility="{Binding Path=IsBinary, Mode=OneTime, Converter={local:BooleanToVisibilityConverter}}" />

                <GridSplitter Grid.Row="2" 
                              Height="4" 
                              Visibility="{Binding Path=IsBinary, Mode=OneTime, Converter={local:BooleanToVisibilityConverter}}"
                              Background="Transparent" />

                <metro:MetroAnimatedTabControl Grid.Row="3">

                    <!-- Serializer Log -->

                    <TabItem Header="Serializer Log"
                             DataContext="{Binding Path=SerializerLogViewModel, Mode=OneTime}"
                             Visibility="{Binding Converter={local:InvertedObjectNullToVisibilityConverter}}"
                             local:TabItemAssist.IconKind="Text">
                        <Grid DataContext="{Binding Path=Value, Mode=OneTime}">

                            <TextBox IsReadOnly="True"
                                     AcceptsReturn="True"
                                     FontFamily="Consolas"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     Text="{Binding Path=Log.Value}" />

                            <metro:ProgressRing Visibility="{Binding Path=Log.Value, Converter={local:ObjectNullToVisibilityConverter}}" />

                        </Grid>
                    </TabItem>

                    <!-- Raw Data -->

                    <TabItem Header="Raw Data"
                             DataContext="{Binding Path=RawDataViewModel, Mode=OneTime}"
                             Visibility="{Binding Converter={local:InvertedObjectNullToVisibilityConverter}}"
                             local:TabItemAssist.IconKind="Hexadecimal">
                        <Grid DataContext="{Binding Path=Value, Mode=OneTime}">

                            <hex:HexViewer DataSource="{Binding Path=RawData.Value}" 
                                           Background="Transparent"
                                           Foreground="#FFFFFF"
                                           AddressBrush="#FFFFFF"
                                           AlternatingDataColumnTextBrush="#B8B8B8"
                                           SelectionBrush="#424242"
                                           SelectionTextBrush="#FFFFFF"
                                           Columns="{Binding RelativeSource={RelativeSource Self}, Path=MaxVisibleColumns}" />

                            <metro:ProgressRing Visibility="{Binding Path=RawData.Value, Converter={local:ObjectNullToVisibilityConverter}}" />

                        </Grid>
                    </TabItem>

                </metro:MetroAnimatedTabControl>

            </Grid>

            <TextBlock Grid.Column="2"
                       FontSize="24"
                       Visibility="{Binding Path=SelectedNode, Converter={local:ObjectNullToVisibilityConverter}, FallbackValue=Visible}"
                       Text="No data node selected"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>

        </Grid>

    </Grid>
</metro:MetroWindow>